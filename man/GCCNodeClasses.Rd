\name{GCCNodeClasses}
\docType{class}
\alias{NodeIndex-class}
\alias{GCC::NodeNode::abs_expr-class}
\alias{GCC::NodeNode::addr_expr-class}
\alias{GCC::NodeNode::array_ref-class}
\alias{GCC::NodeNode::bit_and_expr-class}
\alias{GCC::NodeNode::bit_ior_expr-class}
\alias{GCC::NodeNode::break_stmt-class}
\alias{GCC::NodeNode::call_expr-class}
\alias{GCC::NodeNode::case_label-class}
\alias{GCC::NodeNode::ceil_div_expr-class}
\alias{GCC::NodeNode::ceil_mod_expr-class}
\alias{GCC::NodeNode::complex_type-class}
\alias{GCC::NodeNode::enumeral_type-class}
\alias{GCC::NodeNode::component_ref-class}
\alias{GCC::NodeNode::compound_expr-class}
\alias{GCC::NodeNode::compound_stmt-class}
\alias{GCC::NodeNode::cond_expr-class}
\alias{GCC::NodeNode::const_decl-class}
\alias{GCC::NodeNode::constructor-class}
\alias{GCC::NodeNode::convert_expr-class}
\alias{GCC::NodeNode::decl_stmt-class}
\alias{GCC::NodeNode::do_stmt-class}
\alias{GCC::NodeNode::eq_expr-class}
\alias{GCC::NodeNode::expr_stmt-class}
\alias{GCC::NodeNode::field_decl-class}
\alias{GCC::NodeNode::fix_trunc_expr-class}
\alias{GCC::NodeNode::float_expr-class}
\alias{GCC::NodeNode::floor_div_expr-class}
\alias{GCC::NodeNode::floor_mod_expr-class}
\alias{GCC::NodeNode::for_stmt-class}
\alias{GCC::NodeNode::function_decl-class}
\alias{GCC::NodeNode::ge_expr-class}
\alias{GCC::NodeNode::goto_stmt-class}
\alias{GCC::NodeNode::gt_expr-class}
\alias{GCC::NodeNode::if_stmt-class}
\alias{GCC::NodeNode::indirect_ref-class}
\alias{GCC::NodeNode::init_expr-class}
\alias{GCC::NodeNode::integer_cst-class}
\alias{GCC::NodeNode::label_stmt-class}
\alias{GCC::NodeNode::le_expr-class}
\alias{GCC::NodeNode::lshift_expr-class}
\alias{GCC::NodeNode::lt_expr-class}
\alias{GCC::NodeNode::minus_expr-class}
\alias{GCC::NodeNode::modify_expr-class}
\alias{GCC::NodeNode::mult_expr-class}
\alias{GCC::NodeNode::namespace_decl-class}
\alias{GCC::NodeNode::ne_expr-class}
\alias{GCC::NodeNode::negate_expr-class}
\alias{GCC::NodeNode::non_lvalue_expr-class}
\alias{GCC::NodeNode::nop_expr-class}
\alias{GCC::NodeNode::parm_decl-class}
\alias{GCC::NodeNode::plus_expr-class}
\alias{GCC::NodeNode::postdecrement_expr-class}
\alias{GCC::NodeNode::postincrement_expr-class}
\alias{GCC::NodeNode::predecrement_expr-class}
\alias{GCC::NodeNode::preincrement_expr-class}
\alias{GCC::NodeNode::rdiv_expr-class}
\alias{GCC::NodeNode::result_decl-class}
\alias{GCC::NodeNode::return_stmt-class}
\alias{GCC::NodeNode::round_div_expr-class}
\alias{GCC::NodeNode::round_mod_expr-class}
\alias{GCC::NodeNode::rshift_expr-class}
\alias{GCC::NodeNode::save_expr-class}
\alias{GCC::NodeNode::scope_stmt-class}
\alias{GCC::NodeNode::string_cst-class}
\alias{GCC::NodeNode::switch_stmt-class}
\alias{GCC::NodeNode::target_expr-class}
\alias{GCC::NodeNode::template_decl-class}
\alias{GCC::NodeNode::tree_list-class}
\alias{GCC::NodeNode::trunc_div_expr-class}
\alias{GCC::NodeNode::trunc_mod_expr-class}
\alias{GCC::NodeNode::truth_andif_expr-class}
\alias{GCC::NodeNode::truth_orif_expr-class}
\alias{GCC::NodeNode::type_decl-class}
\alias{GCC::NodeNode::var_decl-class}
\alias{GCC::NodeNode::while_stmt-class}
\alias{GCC::Node::abs_expr-class}
\alias{GCC::Node::addr_expr-class}
\alias{GCC::Node::aggr_init_expr-class}
\alias{GCC::Node::array_ref-class}
\alias{GCC::Node::array_type-class}
\alias{GCC::Node::arrow_expr-class}
\alias{GCC::Node::asm_expr-class}
\alias{GCC::Node::baselink-class}
\alias{GCC::Node::bind_expr-class}
\alias{GCC::Node::binfo-class}
\alias{GCC::Node::bit_and_expr-class}
\alias{GCC::Node::bit_ior_expr-class}
\alias{GCC::Node::bit_not_expr-class}
\alias{GCC::Node::bit_xor_expr-class}
\alias{GCC::Node::boolean_type-class}
\alias{GCC::Node::break_stmt-class}
\alias{GCC::Node::call_expr-class}
\alias{GCC::Node::case_label_expr-class}
\alias{GCC::Node::cast_expr-class}
\alias{GCC::Node::complex_type-class}
\alias{GCC::Node::component_ref-class}
\alias{GCC::Node::compound_expr-class}
\alias{GCC::Node::cond_expr-class}
\alias{GCC::Node::const_cast_expr-class}
\alias{GCC::Node::const_decl-class}
\alias{GCC::Node::constructor-class}
\alias{GCC::Node::continue_stmt-class}
\alias{GCC::Node::convert_expr-class}
\alias{GCC::Node::ctor_initializer-class}
\alias{GCC::Node::decl_expr-class}
\alias{GCC::Node::dl_expr-class}
\alias{GCC::Node::do_stmt-class}
\alias{GCC::Node::dotstar_expr-class}
\alias{GCC::Node::enumeral_type-class}
\alias{GCC::Node::eq_expr-class}
\alias{GCC::Node::exact_div_expr-class}
\alias{GCC::Node::expr_stmt-class}
\alias{GCC::Node::field_decl-class}
\alias{GCC::Node::fix_trunc_expr-class}
\alias{GCC::Node::float_expr-class}
\alias{GCC::Node::for_stmt-class}
\alias{GCC::Node::function_type-class}
\alias{GCC::Node::ge_expr-class}
\alias{GCC::Node::goto_expr-class}
\alias{GCC::Node::gt_expr-class}
\alias{GCC::Node::handler-class}
\alias{GCC::Node::identifier_node-class}
\alias{GCC::Node::if_stmt-class}
\alias{GCC::Node::indirect_ref-class}
\alias{GCC::Node::integer_cst-class}
\alias{GCC::Node::integer_type-class}
\alias{GCC::Node::label_decl-class}
\alias{GCC::Node::label_expr-class}
\alias{GCC::Node::lang_type-class}
\alias{GCC::Node::le_expr-class}
\alias{GCC::Node::lshift_expr-class}
\alias{GCC::Node::lt_expr-class}
\alias{GCC::Node::member_ref-class}
\alias{GCC::Node::method_type-class}
\alias{GCC::Node::minus_expr-class}
\alias{GCC::Node::modify_expr-class}
\alias{GCC::Node::modop_expr-class}
\alias{GCC::Node::mult_expr-class}
\alias{GCC::Node::namespace_decl-class}
\alias{GCC::Node::ne_expr-class}
\alias{GCC::Node::negate_expr-class}
\alias{GCC::Node::nop_expr-class}
\alias{GCC::Node::nw_expr-class}
\alias{GCC::Node::obj_type_ref-class}
\alias{GCC::Node::overload-class}
\alias{GCC::Node::parm_decl-class}
\alias{GCC::Node::plus_expr-class}
\alias{GCC::Node::pointer_type-class}
\alias{GCC::Node::postdecrement_expr-class}
\alias{GCC::Node::postincrement_expr-class}
\alias{GCC::Node::predecrement_expr-class}
\alias{GCC::Node::preincrement_expr-class}
\alias{GCC::Node::rdiv_expr-class}
\alias{GCC::Node::real_cst-class}
\alias{GCC::Node::real_type-class}
\alias{GCC::Node::record_type-class}
\alias{GCC::Node::reference_type-class}
\alias{GCC::Node::reinterpret_cast_expr-class}
\alias{GCC::Node::result_decl-class}
\alias{GCC::Node::return_expr-class}
\alias{GCC::Node::rshift_expr-class}
\alias{GCC::Node::save_expr-class}
\alias{GCC::Node::scope_ref-class}
\alias{GCC::Node::sizeof_expr-class}
\alias{GCC::Node::statement_list-class}
\alias{GCC::Node::static_cast_expr-class}
\alias{GCC::Node::string_cst-class}
\alias{GCC::Node::switch_stmt-class}
\alias{GCC::Node::tag_defn-class}
\alias{GCC::Node::template_decl-class}
\alias{GCC::Node::template_id_expr-class}
\alias{GCC::Node::template_parm_index-class}
\alias{GCC::Node::template_type_parm-class}
\alias{GCC::Node::throw_expr-class}
\alias{GCC::Node::tree_list-class}
\alias{GCC::Node::tree_vec-class}
\alias{GCC::Node::trunc_div_expr-class}
\alias{GCC::Node::trunc_mod_expr-class}
\alias{GCC::Node::truth_andif_expr-class}
\alias{GCC::Node::truth_not_expr-class}
\alias{GCC::Node::truth_orif_expr-class}
\alias{GCC::Node::try_block-class}
\alias{GCC::Node::try_catch_expr-class}
\alias{GCC::Node::try_finally-class}
\alias{GCC::Node::type_decl-class}
\alias{GCC::Node::typename_type-class}
\alias{GCC::Node::union_type-class}
\alias{GCC::Node::using_decl-class}
\alias{GCC::Node::var_decl-class}
\alias{GCC::Node::vector_type-class}
\alias{GCC::Node::void_type-class}
\alias{GCC::Node::while_stmt-class}
\alias{GCC::Node::case_label-class}
\alias{GCC::Node::ceil_div_expr-class}
\alias{GCC::Node::ceil_mod_expr-class}
\alias{GCC::Node::compound_stmt}
\alias{GCC::Node::decl_stmt-class}
\alias{GCC::Node::floor_div_expr-class}
\alias{GCC::Node::floor_mod_expr-class}
\alias{GCC::Node::goto_stmt-class}
\alias{GCC::Node::init_expr-class}
\alias{GCC::Node::label_stmt-class}
\alias{GCC::Node::non_lvalue_expr-class}
\alias{GCC::Node::return_stmt-class}
\alias{GCC::Node::round_div_expr-class}
\alias{GCC::Node::round_mod_expr-class}
\alias{GCC::Node::scope_stmt-class}
\alias{GCC::Node::target_expr-class}
\alias{GCC::Node::compound_stmt-class}
\alias{GCC::Node::function_decl-class}

\alias{[[,GCCNode,ANY-method}
\alias{coerce,GCCNode,TUParser-method}
\alias{names,GCCNode-method}

%\alias{freeVariables,GCC::Node::function_decl-method}
%\alias{getCallGraph,ANY,GCC::Node::function_decl-method}
%\alias{getInOutArgs,GCC::Node::function_decl,ANY-method}

\title{Perl parser translation unit node classes}
\description{ S3-style classes to represent the nodes in the Perl
  translation unit (TU) parser}
\section{Objects from the Class}{A virtual Class: No objects may be created from it.}
\section{Extends}{
 Class \code{"\linkS4class{PerlHashReference}"}, directly.
 Class \code{"\linkS4class{PerlReference}"}, by class "PerlHashReference", distance 2.
 Class \code{"\linkS4class{oldClass}"}, by class "PerlHashReference", distance 3.
}
\section{Methods}{
  \describe{
    \item{freeVariables}{\code{signature(def = "GCC::Node::function_decl")}: ... }
    \item{getCallGraph}{\code{signature(nodes = "ANY", defs = "GCC::Node::function_decl")}: ... }
    \item{getInOutArgs}{\code{signature(routine = "GCC::Node::function_decl", nodes = "ANY")}: ... }
	 }
}
\references{\url{http://www.gnu.org/gcc}{GCC}}
\author{Duncan Temple Lang}
\seealso{
 \code{\link{parseTU}}
}
\examples{
showClass("GCC::Node::function_decl")
}
\keyword{classes}
